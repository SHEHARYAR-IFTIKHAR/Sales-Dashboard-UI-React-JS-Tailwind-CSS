<div className="w-[95%]">
        <div className="w-full border overflowscroll">
          <Table />
        </div>
      </div>


      {/* {data.map((item) => (
            <tr key={item.id}>
              <td>{item.id}</td>
              <td>{item.name}</td>
            </tr>
          ))} */}



          // const tableData = [
//   {
//     invoiceId: "#AHGA61",
//     date: "23/09/2022",
//     customer: "Jacob Marcus",
//     payableAmount: "$100",
//     paidAmount: "$000",
//     due: "$000",
//   },
//   {
//     invoiceId: "#AHGA68",
//     date: "23/09/2022",
//     customer: "Jacob Marcus",
//     payableAmount: "$100",
//     paidAmount: "$000",
//     due: "$000",
//   },
//   {
//     invoiceId: "#AHGA62",
//     date: "23/09/2022",
//     customer: "Jacob Marcus",
//     payableAmount: "$100",
//     paidAmount: "$000",
//     due: "$000",
//   },
//   {
//     invoiceId: "#AHGA64",
//     date: "23/09/2022",
//     customer: "Jacob Marcus",
//     payableAmount: "$100",
//     paidAmount: "$000",
//     due: "$000",
//   },
//   {
//     invoiceId: "#AHGA63",
//     date: "23/09/2022",
//     customer: "Jacob Marcus",
//     payableAmount: "$100",
//     paidAmount: "$000",
//     due: "$000",
//   },
//   {
//     invoiceId: "#AHGA66",
//     date: "23/09/2022",
//     customer: "Jacob Marcus",
//     payableAmount: "$100",
//     paidAmount: "$000",
//     due: "$000",
//   },
//   {
//     invoiceId: "#AHGA69",
//     date: "23/09/2022",
//     customer: "Jacob Marcus",
//     payableAmount: "$100",
//     paidAmount: "$000",
//     due: "$000",
//   },
//   {
//     invoiceId: "#AHGA65",
//     date: "23/09/2022",
//     customer: "Jacob Marcus",
//     payableAmount: "$100",
//     paidAmount: "$000",
//     due: "$000",
//   },
//   {
//     invoiceId: "#AHGA60",
//     date: "23/09/2022",
//     customer: "Jacob Marcus",
//     payableAmount: "$100",
//     paidAmount: "$000",
//     due: "$000",
//   },
//   {
//     invoiceId: "#AHGA55",
//     date: "23/09/2022",
//     customer: "Jacob Marcus",
//     payableAmount: "$100",
//     paidAmount: "$000",
//     due: "$000",
//   },
//   {
//     invoiceId: "#AHGA52",
//     date: "23/09/2022",
//     customer: "Jacob Marcus",
//     payableAmount: "$100",
//     paidAmount: "$000",
//     due: "$000",
//   },
//   {
//     invoiceId: "#AHGA58",
//     date: "23/09/2022",
//     customer: "Jacob Marcus",
//     payableAmount: "$100",
//     paidAmount: "$000",
//     due: "$000",
//   },
//   {
//     invoiceId: "#AHGA56",
//     date: "23/09/2022",
//     customer: "Jacob Marcus",
//     payableAmount: "$100",
//     paidAmount: "$000",
//     due: "$000",
//   },
// ];


// const invoiceIdfilteredData = ()=>{
  //   let res = data.filter(item =>
  //     item.invoiceId?.toLowerCase().includes(filterValue?.toLowerCase())
  //   );
  //   console.log("filter",res)
  //   return res
  // }

  // const invoiceIdfilteredData = ()=>{
  //   let res = data.filter(item =>
  //     item.invoiceId?.toLowerCase().includes(filterValue?.toLowerCase())
  //   );
  //   console.log("filter",res)
  //   return res
  // }


  // useEffect(() => {
  //   console.log("invoiceId", invoiceId);
  // }, [invoiceId]);

  // useEffect(() => {
  //   console.log("startDate", startDate);
  // }, [startDate]);

  // useEffect(() => {
  //   console.log("endDate", endDate);
  // }, [endDate]);
















import React, { useState } from 'react';

const Sidebar = () => {
  const [isOpen, setIsOpen] = useState(false);

  const toggleSidebar = () => {
    setIsOpen(!isOpen);
  };

  return (
    <div className="flex">
      {/* Sidebar */}
      <div
        className={`fixed top-0 left-0 h-full w-64 bg-gray-800 text-white transition-transform duration-300 transform ${
          isOpen ? 'translate-x-0' : '-translate-x-full'
        } md:translate-x-0`}
      >
        <div className="p-4">
          <h2 className="text-2xl font-bold">Sidebar</h2>
          <ul className="mt-6">
            <li className="mb-2">
              <a href="#" className="text-white">Home</a>
            </li>
            <li className="mb-2">
              <a href="#" className="text-white">About</a>
            </li>
            <li className="mb-2">
              <a href="#" className="text-white">Services</a>
            </li>
            <li className="mb-2">
              <a href="#" className="text-white">Contact</a>
            </li>
          </ul>
        </div>
      </div>

      {/* Burger Menu Button */}
      <button
        onClick={toggleSidebar}
        className="p-2 text-2xl bg-gray-800 text-white fixed top-4 left-4 z-50 md:hidden"
      >
        &#9776;
      </button>

      {/* Overlay */}
      {isOpen && (
        <div
          onClick={toggleSidebar}
          className="fixed inset-0 bg-black bg-opacity-50 z-40 md:hidden"
        ></div>
      )}

      {/* Main Content */}
      <div className="flex-1 p-6 ml-64 md:ml-0">
        <h1 className="text-4xl">Main Content</h1>
        <p>Your main content goes here.</p>
      </div>
    </div>
  );
};

export default Sidebar;
























// src/Table.js
import React, { useState, useEffect } from 'react';
import { saveDataToLocalStorage, loadDataFromLocalStorage } from './utils/localStorage';

const Table = () => {
  const [data, setData] = useState(() => {
    const savedData = loadDataFromLocalStorage('tableData');
    return savedData || [
      { name: 'John Doe', age: 28 },
      { name: 'Jane Smith', age: 34 }
    ];
  });

  const [editIdx, setEditIdx] = useState(-1);

  useEffect(() => {
    saveDataToLocalStorage('tableData', data);
  }, [data]);

  const handleEdit = (index) => {
    setEditIdx(index);
  };

  const handleSave = () => {
    setEditIdx(-1);
  };

  const handleDelete = (index) => {
    const newData = data.filter((_, idx) => idx !== index);
    setData(newData);
  };

  const handleChange = (e, index, key) => {
    const { value } = e.target;
    const newData = [...data];
    newData[index][key] = value;
    setData(newData);
  };

  return (
    <div className="flex justify-center py-10">
      <table className="min-w-full bg-white border border-gray-200 rounded-md shadow-md">
        <thead>
          <tr className="bg-gray-100">
            <th className="px-6 py-3 border-b border-gray-200">Name</th>
            <th className="px-6 py-3 border-b border-gray-200">Age</th>
            <th className="px-6 py-3 border-b border-gray-200">Actions</th>
          </tr>
        </thead>
        <tbody>
          {data.length > 0 ? (
            data.map((row, index) => (
              <tr
                key={index}
                className="hover:bg-gray-50"
              >
                {Object.keys(row).map((key, colIndex) => (
                  <td key={colIndex} className={`px-6 py-4 border-b border-gray-200 ${colIndex === 0 ? 'text-blue-600' : ''}`}>
                    {editIdx === index ? (
                      <input
                        type="text"
                        value={row[key]}
                        onChange={(e) => handleChange(e, index, key)}
                        className={`border rounded-md px-2 py-1 focus:outline-none focus:ring-2 ${colIndex === 0 ? 'text-blue-600' : 'focus:ring-blue-500'}`}
                      />
                    ) : (
                      row[key]
                    )}
                  </td>
                ))}
                <td className="px-6 py-4 border-b border-gray-200">
                  {editIdx === index ? (
                    <button
                      onClick={handleSave}
                      className="bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600"
                    >
                      Save
                    </button>
                  ) : (
                    <button
                      onClick={() => handleEdit(index)}
                      className="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600"
                    >
                      Edit
                    </button>
                  )}
                  <button
                    onClick={() => handleDelete(index)}
                    className="bg-red-500 text-white px-4 py-2 ml-2 rounded-md hover:bg-red-600"
                  >
                    Delete
                  </button>
                </td>
              </tr>
            ))
          ) : (
            <tr>
              <td colSpan={3} className="text-center py-4 text-gray-500">
                No data available.
              </td>
            </tr>
          )}
        </tbody>
      </table>
    </div>
  );
};

export default Table;
